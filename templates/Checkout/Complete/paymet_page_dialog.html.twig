<div id="unzer-payment-dialog-placeholder"></div>
<script type="text/javascript">
    //# sourceURL=payment_page_dialog.js
    document.addEventListener('DOMContentLoaded', () => {
        const paymentPageCreateUrl = '{{ unzer_payment_page_url }}';
        const paymentErrorUrl = '{{ unzer_payment_error }}';
        let unzerPaymentType = '{{ unzer_payment_page_type }}';
        let unzerDialogPlaceholder = document.getElementById('unzer-payment-dialog-placeholder');
        let checkoutCompleteForm = unzerDialogPlaceholder.closest('form');
        if (!checkoutCompleteForm) {
            return;
        }

        function createPayPage(selectedUnzerPaymentType) {
            return fetch(paymentPageCreateUrl, {
                method: 'post',
                headers: { 'content-type': 'application/json' },
                body: JSON.stringify({ paymentType: selectedUnzerPaymentType })
            }).then(function(res) {
                return res.status === 400
                    ? (window.location.reload(), setTimeout(() => window.scrollTo(0, 0), 100))
                    : res.json();
            })
        }

        checkoutCompleteForm.addEventListener("submit", function(event) {
            let selectedUnzerPaymentType = unzerPaymentType || checkoutCompleteForm.querySelector('input[name=unzer_payment_method_type]:checked')?.value;
            if (!selectedUnzerPaymentType) {
                return;
            }

            event.preventDefault();

            checkoutCompleteForm.classList.add('loading');

            createPayPage(selectedUnzerPaymentType).then(function (payPageData) {

                const unzerContainer = document.getElementById("unzer-payment-dialog-placeholder");
                unzerContainer.innerHTML = `
            <unzer-payment publicKey="${payPageData.publicKey}">
                <unzer-pay-page
                    id="checkout"
                    payPageId="${payPageData.id}"
                ></unzer-pay-page>
            </unzer-payment>
        `;
                const checkout = document.getElementById("checkout");

                checkout.abort(function() {
                    checkout._hideIframe();
                    checkoutCompleteForm.classList.remove('loading');
                });

                checkout.success(function(data) {
                    if(!data.redirectUrl) {
                        window.top.location.href = data.returnUrl;
                    }
                });

                checkout.error(function(error) {
                    checkoutCompleteForm.classList.remove('loading');
                    return fetch(paymentErrorUrl, {
                        method: 'post',
                        headers: { 'content-type': 'application/json' },
                        body: JSON.stringify({ errorMessage: error.errorMessage })
                    }).then(function(res) {
                        return res.status === 400
                            ? (window.location.reload(), setTimeout(() => window.scrollTo(0, 0), 1000))
                            : res.json();
                    })
                });

                checkout.open();
                checkoutCompleteForm.classList.remove('loading');

            });
        }, true);
    });
</script>
